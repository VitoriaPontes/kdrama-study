{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":10630306,"sourceType":"datasetVersion","datasetId":6581869}],"dockerImageVersionId":30839,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n\n%pip install matplotlib\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-02-01T18:52:17.206267Z","iopub.execute_input":"2025-02-01T18:52:17.206631Z","iopub.status.idle":"2025-02-01T18:52:21.631700Z","shell.execute_reply.started":"2025-02-01T18:52:17.206601Z","shell.execute_reply":"2025-02-01T18:52:21.630301Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/top-100-most-popular-k-dramas-at-january-2025/top 100 most popular k-dramas.csv\nRequirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (3.7.5)\nRequirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.3.1)\nRequirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (0.12.1)\nRequirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (4.55.3)\nRequirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.4.7)\nRequirement already satisfied: numpy<2,>=1.20 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.26.4)\nRequirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (24.2)\nRequirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (11.0.0)\nRequirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (3.2.0)\nRequirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (2.8.2)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.10/dist-packages (from numpy<2,>=1.20->matplotlib) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.10/dist-packages (from numpy<2,>=1.20->matplotlib) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.10/dist-packages (from numpy<2,>=1.20->matplotlib) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.10/dist-packages (from numpy<2,>=1.20->matplotlib) (2025.0.1)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.10/dist-packages (from numpy<2,>=1.20->matplotlib) (2022.0.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.10/dist-packages (from numpy<2,>=1.20->matplotlib) (2.4.1)\nRequirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib) (1.17.0)\nRequirement already satisfied: intel-openmp>=2024 in /usr/local/lib/python3.10/dist-packages (from mkl->numpy<2,>=1.20->matplotlib) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.10/dist-packages (from mkl->numpy<2,>=1.20->matplotlib) (2022.0.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.10/dist-packages (from tbb==2022.*->mkl->numpy<2,>=1.20->matplotlib) (1.2.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.10/dist-packages (from mkl_umath->numpy<2,>=1.20->matplotlib) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.10/dist-packages (from intel-openmp>=2024->mkl->numpy<2,>=1.20->matplotlib) (2024.2.0)\nNote: you may need to restart the kernel to use updated packages.\n","output_type":"stream"}],"execution_count":250},{"cell_type":"markdown","source":"No código abaixo é feito a leitura do arquivo que será acessado como 'drama'.","metadata":{}},{"cell_type":"code","source":"drama = pd.read_csv('/kaggle/input/top-100-most-popular-k-dramas-at-january-2025/top 100 most popular k-dramas.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-01T18:52:21.633495Z","iopub.execute_input":"2025-02-01T18:52:21.633823Z","iopub.status.idle":"2025-02-01T18:52:21.645643Z","shell.execute_reply.started":"2025-02-01T18:52:21.633794Z","shell.execute_reply":"2025-02-01T18:52:21.644422Z"}},"outputs":[],"execution_count":251},{"cell_type":"markdown","source":"Inicialmente, teremos uma visão dos dados que estão sendo representados. Segue abaixo os tipos de cada variável(coluna) e a quantidade de itens.","metadata":{}},{"cell_type":"code","source":"drama.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-01T18:52:21.648082Z","iopub.execute_input":"2025-02-01T18:52:21.648538Z","iopub.status.idle":"2025-02-01T18:52:21.664351Z","shell.execute_reply.started":"2025-02-01T18:52:21.648492Z","shell.execute_reply":"2025-02-01T18:52:21.663024Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 100 entries, 0 to 99\nData columns (total 10 columns):\n #   Column        Non-Null Count  Dtype  \n---  ------        --------------  -----  \n 0   Name          100 non-null    object \n 1   Year          100 non-null    int64  \n 2   Rating        100 non-null    float64\n 3   Watchers      100 non-null    object \n 4   Episodes      100 non-null    int64  \n 5   Ep. Duration  100 non-null    object \n 6   Aired On      100 non-null    object \n 7   Genres        100 non-null    object \n 8   Tags          100 non-null    object \n 9   Main Actors   100 non-null    object \ndtypes: float64(1), int64(2), object(7)\nmemory usage: 7.9+ KB\n","output_type":"stream"}],"execution_count":252},{"cell_type":"markdown","source":"A variável 'watchers' foi definida incorretamente como um object por causa da vírgula no número. No entanto, para trabalhar com esses dados é preciso que eles sejam um float. Por isso, farei a mudança do tipo da variável.","metadata":{}},{"cell_type":"code","source":"drama['Watchers'] = drama['Watchers'].str.replace(',', '')\ndrama['Watchers'] = drama['Watchers'].astype(float)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-01T18:52:21.666112Z","iopub.execute_input":"2025-02-01T18:52:21.666641Z","iopub.status.idle":"2025-02-01T18:52:21.684415Z","shell.execute_reply.started":"2025-02-01T18:52:21.666586Z","shell.execute_reply":"2025-02-01T18:52:21.683330Z"}},"outputs":[],"execution_count":253},{"cell_type":"code","source":"drama.dtypes","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-01T18:52:21.685531Z","iopub.execute_input":"2025-02-01T18:52:21.685914Z","iopub.status.idle":"2025-02-01T18:52:21.707007Z","shell.execute_reply.started":"2025-02-01T18:52:21.685863Z","shell.execute_reply":"2025-02-01T18:52:21.705980Z"}},"outputs":[{"execution_count":254,"output_type":"execute_result","data":{"text/plain":"Name             object\nYear              int64\nRating          float64\nWatchers        float64\nEpisodes          int64\nEp. Duration     object\nAired On         object\nGenres           object\nTags             object\nMain Actors      object\ndtype: object"},"metadata":{}}],"execution_count":254},{"cell_type":"markdown","source":"Agora, com cada variável com seu tipo correspondente. Teremos uma visualização das primeiras 5 linhas da tabela para melhor entender como ela funciona.","metadata":{}},{"cell_type":"code","source":"drama.head(5)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-01T18:52:21.708306Z","iopub.execute_input":"2025-02-01T18:52:21.708629Z","iopub.status.idle":"2025-02-01T18:52:21.731645Z","shell.execute_reply.started":"2025-02-01T18:52:21.708601Z","shell.execute_reply":"2025-02-01T18:52:21.730413Z"}},"outputs":[{"execution_count":255,"output_type":"execute_result","data":{"text/plain":"                              Name  Year  Rating  Watchers  Episodes  \\\n0                           Goblin  2016     8.8  254985.0        16   \n1        Strong Woman Do Bong Soon  2016     8.7  239773.0        16   \n2         It's Okay to Not Be Okay  2020     8.9  215957.0        16   \n3           Descendants of the Sun  2016     8.6  213187.0        16   \n4  What's Wrong with Secretary Kim  2018     8.5  212766.0        16   \n\n  Ep. Duration             Aired On                                 Genres  \\\n0        01:22     Friday, Saturday    Comedy, Romance, Fantasy, Melodrama   \n1        01:07     Friday, Saturday  Action, Comedy, Romance, Supernatural   \n2        01:15     Saturday, Sunday  Psychological, Comedy, Romance, Drama   \n3        01:00  Wednesday, Thursday  Action, Comedy, Romance, Supernatural   \n4        01:09  Wednesday, Thursday              Business, Comedy, Romance   \n\n                                                Tags  \\\n0  Older Man/Younger Woman, Interspecies Romance,...   \n1  Superhuman Strenght, Love Triangle, Nice Male ...   \n2  Independent Female Lead, Possessive Female Lea...   \n3  Military, Bromance, Multiple Couples, Hardwork...   \n4  Boss-Employee Relationship, Rich Male Lead, Ad...   \n\n                                         Main Actors  \n0  Gong Yoo, Kim Go Eun, Lee Dong Wook, Yoo In Na...  \n1          Park Bo Young, Park Hyung Sik, Kim Ji Soo  \n2               Kim Soo Hyun, Seo Yea Ji, Oh Jung Se  \n3   Song Joong Ki, Song Hye Kyo, Jin Goo, Kim Ji Won  \n4                      Park Min Young, Park Seo Joon  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Name</th>\n      <th>Year</th>\n      <th>Rating</th>\n      <th>Watchers</th>\n      <th>Episodes</th>\n      <th>Ep. Duration</th>\n      <th>Aired On</th>\n      <th>Genres</th>\n      <th>Tags</th>\n      <th>Main Actors</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Goblin</td>\n      <td>2016</td>\n      <td>8.8</td>\n      <td>254985.0</td>\n      <td>16</td>\n      <td>01:22</td>\n      <td>Friday, Saturday</td>\n      <td>Comedy, Romance, Fantasy, Melodrama</td>\n      <td>Older Man/Younger Woman, Interspecies Romance,...</td>\n      <td>Gong Yoo, Kim Go Eun, Lee Dong Wook, Yoo In Na...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Strong Woman Do Bong Soon</td>\n      <td>2016</td>\n      <td>8.7</td>\n      <td>239773.0</td>\n      <td>16</td>\n      <td>01:07</td>\n      <td>Friday, Saturday</td>\n      <td>Action, Comedy, Romance, Supernatural</td>\n      <td>Superhuman Strenght, Love Triangle, Nice Male ...</td>\n      <td>Park Bo Young, Park Hyung Sik, Kim Ji Soo</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>It's Okay to Not Be Okay</td>\n      <td>2020</td>\n      <td>8.9</td>\n      <td>215957.0</td>\n      <td>16</td>\n      <td>01:15</td>\n      <td>Saturday, Sunday</td>\n      <td>Psychological, Comedy, Romance, Drama</td>\n      <td>Independent Female Lead, Possessive Female Lea...</td>\n      <td>Kim Soo Hyun, Seo Yea Ji, Oh Jung Se</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Descendants of the Sun</td>\n      <td>2016</td>\n      <td>8.6</td>\n      <td>213187.0</td>\n      <td>16</td>\n      <td>01:00</td>\n      <td>Wednesday, Thursday</td>\n      <td>Action, Comedy, Romance, Supernatural</td>\n      <td>Military, Bromance, Multiple Couples, Hardwork...</td>\n      <td>Song Joong Ki, Song Hye Kyo, Jin Goo, Kim Ji Won</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>What's Wrong with Secretary Kim</td>\n      <td>2018</td>\n      <td>8.5</td>\n      <td>212766.0</td>\n      <td>16</td>\n      <td>01:09</td>\n      <td>Wednesday, Thursday</td>\n      <td>Business, Comedy, Romance</td>\n      <td>Boss-Employee Relationship, Rich Male Lead, Ad...</td>\n      <td>Park Min Young, Park Seo Joon</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":255},{"cell_type":"markdown","source":"Nessa tabela cada linha das variáveis 'aired on', 'genres', 'tags' e 'main actors' vê seus dados como uma string só, o que não é muito benéfico para uma boa análise. No caso de 'aired on', como o intuito é entender os melhores padrões de lançamento, ela pode continuar dessa forma. Porém, as outras devem ser divididas em várias strings.","metadata":{}},{"cell_type":"code","source":"#Garantindo que não haverá espaços atrapalhando na contagem\ndrama['Genres'] = drama['Genres'].str.replace(' ','')\n#\ndrama['Genres'] = drama['Genres'].str.split(',')\ndrama['Tags'] = drama['Tags'].str.split(',')\ndrama['Main Actors'] = drama['Main Actors'].str.split(',')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-01T18:52:21.732837Z","iopub.execute_input":"2025-02-01T18:52:21.733141Z","iopub.status.idle":"2025-02-01T18:52:21.748337Z","shell.execute_reply.started":"2025-02-01T18:52:21.733115Z","shell.execute_reply":"2025-02-01T18:52:21.747328Z"}},"outputs":[],"execution_count":256},{"cell_type":"code","source":"display(drama)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-01T18:52:21.751084Z","iopub.execute_input":"2025-02-01T18:52:21.751457Z","iopub.status.idle":"2025-02-01T18:52:21.786339Z","shell.execute_reply.started":"2025-02-01T18:52:21.751424Z","shell.execute_reply":"2025-02-01T18:52:21.785132Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"                               Name  Year  Rating  Watchers  Episodes  \\\n0                            Goblin  2016     8.8  254985.0        16   \n1         Strong Woman Do Bong Soon  2016     8.7  239773.0        16   \n2          It's Okay to Not Be Okay  2020     8.9  215957.0        16   \n3            Descendants of the Sun  2016     8.6  213187.0        16   \n4   What's Wrong with Secretary Kim  2018     8.5  212766.0        16   \n..                              ...   ...     ...       ...       ...   \n95                        My Mister  2018     9.0   84371.0        16   \n96                       Dream High  2011     8.0   83783.0        16   \n97                         18 Again  2020     8.6   83582.0        16   \n98            Something in the Rain  2018     8.0   83265.0        16   \n99                   Doctor Strange  2014     7.9   82611.0        20   \n\n   Ep. Duration             Aired On                                   Genres  \\\n0         01:22     Friday, Saturday    [Comedy, Romance, Fantasy, Melodrama]   \n1         01:07     Friday, Saturday  [Action, Comedy, Romance, Supernatural]   \n2         01:15     Saturday, Sunday  [Psychological, Comedy, Romance, Drama]   \n3         01:00  Wednesday, Thursday  [Action, Comedy, Romance, Supernatural]   \n4         01:09  Wednesday, Thursday              [Business, Comedy, Romance]   \n..          ...                  ...                                      ...   \n95         1:17  Wednesday, Thursday             [Psychological, Life, Drama]   \n96         1:10      Monday, Tuesday          [Music, Comedy, Romance, Drama]   \n97         1:10      Monday, Tuesday          [Romance, Life, Drama, Fantasy]   \n98         1:15     Friday, Saturday     [Business, Romance, Life, Melodrama]   \n99         1:00      Monday, Tuesday      [Thriller, Romance, Drama, Medical]   \n\n                                                 Tags  \\\n0   [Older Man/Younger Woman,  Interspecies Romanc...   \n1   [Superhuman Strenght,  Love Triangle,  Nice Ma...   \n2   [Independent Female Lead,  Possessive Female L...   \n3   [Military,  Bromance,  Multiple Couples,  Hard...   \n4   [Boss-Employee Relationship,  Rich Male Lead, ...   \n..                                                ...   \n95  [Nice Male Lead,  Depression,  Healing,  Poor ...   \n96  [High School,  School Bullying,  Love Triangle...   \n97  [First Love,  Father-Son Relationship,  Father...   \n98  [Family Pressure,  Nice Male Lead,  Forbidden ...   \n99  [Nice Male Lead,  Love Triangle,  Scheme,  Hid...   \n\n                                          Main Actors  \n0   [Gong Yoo,  Kim Go Eun,  Lee Dong Wook,  Yoo I...  \n1       [Park Bo Young,  Park Hyung Sik,  Kim Ji Soo]  \n2            [Kim Soo Hyun,  Seo Yea Ji,  Oh Jung Se]  \n3   [Song Joong Ki,  Song Hye Kyo,  Jin Goo,  Kim ...  \n4                    [Park Min Young,  Park Seo Joon]  \n..                                                ...  \n95                                [Lee Sun Kyun,  IU]  \n96  [Bae Suzy,  Kim Soo Hyun,  Ok Taec Yeon,  Ham ...  \n97       [Kim Ha Neul,  Yoon Sang Hyun,  Lee Do Hyun]  \n98                         [Son Ye Jin,  Jung Hae In]  \n99  [Lee Jong Suk,  Jin Se Yeon,  Kang So Ra,  Par...  \n\n[100 rows x 10 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Name</th>\n      <th>Year</th>\n      <th>Rating</th>\n      <th>Watchers</th>\n      <th>Episodes</th>\n      <th>Ep. Duration</th>\n      <th>Aired On</th>\n      <th>Genres</th>\n      <th>Tags</th>\n      <th>Main Actors</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Goblin</td>\n      <td>2016</td>\n      <td>8.8</td>\n      <td>254985.0</td>\n      <td>16</td>\n      <td>01:22</td>\n      <td>Friday, Saturday</td>\n      <td>[Comedy, Romance, Fantasy, Melodrama]</td>\n      <td>[Older Man/Younger Woman,  Interspecies Romanc...</td>\n      <td>[Gong Yoo,  Kim Go Eun,  Lee Dong Wook,  Yoo I...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Strong Woman Do Bong Soon</td>\n      <td>2016</td>\n      <td>8.7</td>\n      <td>239773.0</td>\n      <td>16</td>\n      <td>01:07</td>\n      <td>Friday, Saturday</td>\n      <td>[Action, Comedy, Romance, Supernatural]</td>\n      <td>[Superhuman Strenght,  Love Triangle,  Nice Ma...</td>\n      <td>[Park Bo Young,  Park Hyung Sik,  Kim Ji Soo]</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>It's Okay to Not Be Okay</td>\n      <td>2020</td>\n      <td>8.9</td>\n      <td>215957.0</td>\n      <td>16</td>\n      <td>01:15</td>\n      <td>Saturday, Sunday</td>\n      <td>[Psychological, Comedy, Romance, Drama]</td>\n      <td>[Independent Female Lead,  Possessive Female L...</td>\n      <td>[Kim Soo Hyun,  Seo Yea Ji,  Oh Jung Se]</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Descendants of the Sun</td>\n      <td>2016</td>\n      <td>8.6</td>\n      <td>213187.0</td>\n      <td>16</td>\n      <td>01:00</td>\n      <td>Wednesday, Thursday</td>\n      <td>[Action, Comedy, Romance, Supernatural]</td>\n      <td>[Military,  Bromance,  Multiple Couples,  Hard...</td>\n      <td>[Song Joong Ki,  Song Hye Kyo,  Jin Goo,  Kim ...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>What's Wrong with Secretary Kim</td>\n      <td>2018</td>\n      <td>8.5</td>\n      <td>212766.0</td>\n      <td>16</td>\n      <td>01:09</td>\n      <td>Wednesday, Thursday</td>\n      <td>[Business, Comedy, Romance]</td>\n      <td>[Boss-Employee Relationship,  Rich Male Lead, ...</td>\n      <td>[Park Min Young,  Park Seo Joon]</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>95</th>\n      <td>My Mister</td>\n      <td>2018</td>\n      <td>9.0</td>\n      <td>84371.0</td>\n      <td>16</td>\n      <td>1:17</td>\n      <td>Wednesday, Thursday</td>\n      <td>[Psychological, Life, Drama]</td>\n      <td>[Nice Male Lead,  Depression,  Healing,  Poor ...</td>\n      <td>[Lee Sun Kyun,  IU]</td>\n    </tr>\n    <tr>\n      <th>96</th>\n      <td>Dream High</td>\n      <td>2011</td>\n      <td>8.0</td>\n      <td>83783.0</td>\n      <td>16</td>\n      <td>1:10</td>\n      <td>Monday, Tuesday</td>\n      <td>[Music, Comedy, Romance, Drama]</td>\n      <td>[High School,  School Bullying,  Love Triangle...</td>\n      <td>[Bae Suzy,  Kim Soo Hyun,  Ok Taec Yeon,  Ham ...</td>\n    </tr>\n    <tr>\n      <th>97</th>\n      <td>18 Again</td>\n      <td>2020</td>\n      <td>8.6</td>\n      <td>83582.0</td>\n      <td>16</td>\n      <td>1:10</td>\n      <td>Monday, Tuesday</td>\n      <td>[Romance, Life, Drama, Fantasy]</td>\n      <td>[First Love,  Father-Son Relationship,  Father...</td>\n      <td>[Kim Ha Neul,  Yoon Sang Hyun,  Lee Do Hyun]</td>\n    </tr>\n    <tr>\n      <th>98</th>\n      <td>Something in the Rain</td>\n      <td>2018</td>\n      <td>8.0</td>\n      <td>83265.0</td>\n      <td>16</td>\n      <td>1:15</td>\n      <td>Friday, Saturday</td>\n      <td>[Business, Romance, Life, Melodrama]</td>\n      <td>[Family Pressure,  Nice Male Lead,  Forbidden ...</td>\n      <td>[Son Ye Jin,  Jung Hae In]</td>\n    </tr>\n    <tr>\n      <th>99</th>\n      <td>Doctor Strange</td>\n      <td>2014</td>\n      <td>7.9</td>\n      <td>82611.0</td>\n      <td>20</td>\n      <td>1:00</td>\n      <td>Monday, Tuesday</td>\n      <td>[Thriller, Romance, Drama, Medical]</td>\n      <td>[Nice Male Lead,  Love Triangle,  Scheme,  Hid...</td>\n      <td>[Lee Jong Suk,  Jin Se Yeon,  Kang So Ra,  Par...</td>\n    </tr>\n  </tbody>\n</table>\n<p>100 rows × 10 columns</p>\n</div>"},"metadata":{}}],"execution_count":257},{"cell_type":"markdown","source":"Agora que todos os dados estão ajustados, podemos começar a análise. De início vamos ver quais são os valores que mais se repetem:","metadata":{}},{"cell_type":"code","source":"year = drama['Year'].value_counts()\ndisplay(pd.DataFrame(year))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-01T18:52:21.787649Z","iopub.execute_input":"2025-02-01T18:52:21.788022Z","iopub.status.idle":"2025-02-01T18:52:21.807950Z","shell.execute_reply.started":"2025-02-01T18:52:21.787972Z","shell.execute_reply":"2025-02-01T18:52:21.806757Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"      count\nYear       \n2016     15\n2020     14\n2019     11\n2017     10\n2021     10\n2022      8\n2015      6\n2018      5\n2013      4\n2014      4\n2023      4\n2009      2\n2010      2\n2024      2\n2011      2\n2007      1","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n    </tr>\n    <tr>\n      <th>Year</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2016</th>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>2020</th>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>2019</th>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>2017</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>2021</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>2022</th>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>2015</th>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>2018</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>2013</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>2014</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>2023</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>2009</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2010</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2024</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2011</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2007</th>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":258},{"cell_type":"code","source":"yearGraphic = year.plot(kind='bar', figsize=(10,4), title='Most popular K-Dramas Release Year', fontsize=12)\nyearGraphic.set_xlabel('Year')\nyearGraphic.set_ylabel('Quantity')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-01T18:52:21.809083Z","iopub.execute_input":"2025-02-01T18:52:21.809480Z","iopub.status.idle":"2025-02-01T18:52:22.132932Z","shell.execute_reply.started":"2025-02-01T18:52:21.809441Z","shell.execute_reply":"2025-02-01T18:52:22.131770Z"}},"outputs":[{"execution_count":259,"output_type":"execute_result","data":{"text/plain":"Text(0, 0.5, 'Quantity')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x400 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":259},{"cell_type":"markdown","source":"Com a ajuda do gráfico, é possível notar que os anos de 2016 e de 2020 são os que se destacam entre os mais populares.","metadata":{}},{"cell_type":"code","source":"drama['Aired On'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-01T18:52:22.134090Z","iopub.execute_input":"2025-02-01T18:52:22.134444Z","iopub.status.idle":"2025-02-01T18:52:22.142898Z","shell.execute_reply.started":"2025-02-01T18:52:22.134400Z","shell.execute_reply":"2025-02-01T18:52:22.141842Z"}},"outputs":[{"execution_count":260,"output_type":"execute_result","data":{"text/plain":"Aired On\nWednesday, Thursday    32\nMonday, Tuesday        26\nFriday, Saturday       15\nSaturday, Sunday       14\nFriday                  8\nThursday                2\nSunday, Saturday        1\nSaturday                1\nWednesday               1\nName: count, dtype: int64"},"metadata":{}}],"execution_count":260},{"cell_type":"markdown","source":"Lançamentos semanais na quarta e na quinta se destaca entre os demais padrões de lançamento.","metadata":{}},{"cell_type":"markdown","source":"Agora para calcular os gêneros mais utilizados, será preciso utilizar outra variável para guardar cada valor individualmente.","metadata":{}},{"cell_type":"code","source":"genres = drama['Genres'].explode()\ndisplay(pd.DataFrame(genres.value_counts()))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-01T18:52:22.143889Z","iopub.execute_input":"2025-02-01T18:52:22.144173Z","iopub.status.idle":"2025-02-01T18:52:22.170475Z","shell.execute_reply.started":"2025-02-01T18:52:22.144148Z","shell.execute_reply":"2025-02-01T18:52:22.169207Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"               count\nGenres              \nRomance           81\nComedy            60\nDrama             56\nThriller          20\nLife              20\nFantasy           20\nAction            17\nMelodrama         14\nYouth             13\nMystery           13\nSupernatural      12\nPsychological      8\nBusiness           7\nHorror             7\nCrime              7\nSci-Fi             6\nLaw                6\nHistorical         5\nMusic              3\nSports             3\nMedical            2\nMilitary           1\nFood               1\nPolitical          1","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n    </tr>\n    <tr>\n      <th>Genres</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Romance</th>\n      <td>81</td>\n    </tr>\n    <tr>\n      <th>Comedy</th>\n      <td>60</td>\n    </tr>\n    <tr>\n      <th>Drama</th>\n      <td>56</td>\n    </tr>\n    <tr>\n      <th>Thriller</th>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Life</th>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Fantasy</th>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Action</th>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>Melodrama</th>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>Youth</th>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>Mystery</th>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>Supernatural</th>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>Psychological</th>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>Business</th>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>Horror</th>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>Crime</th>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>Sci-Fi</th>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>Law</th>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>Historical</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>Music</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>Sports</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>Medical</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>Military</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>Food</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>Political</th>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":261}]}